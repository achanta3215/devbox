name: Build and Release Rust Binary

on:
  workflow_run:
    workflows: ["Tag on Version Change"]
    types:
      - completed

jobs:
  build-linux:
    name: Build for Linux (amd64)
    runs-on: ubuntu-latest

    outputs:
      artifact_name: devbox-linux-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build project
        run: cargo build --release

      - name: Collect Linux Binary
        run: |
          mkdir -p artifacts
          cp target/release/your_binary_name artifacts/your_binary_name-linux-amd64
        shell: bash

      - name: Upload Linux Binary
        uses: actions/upload-artifact@v4
        with:
          name: devbox-linux-amd64
          path: artifacts/your_binary_name-linux-amd64

  build-macos:
    name: Build for macOS (arm64)
    runs-on: macos-latest

    outputs:
      artifact_name: devbox-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build project
        run: cargo build --release

      - name: Collect macOS Binary
        run: |
          mkdir -p artifacts
          cp target/release/your_binary_name artifacts/your_binary_name-macos-arm64
        shell: bash

      - name: Upload macOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: devbox-macos-arm64
          path: artifacts/your_binary_name-macos-arm64

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create GitHub Release and Upload Assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          artifacts: |
            artifacts/your_binary_name-linux-amd64
            artifacts/your_binary_name-macos-arm64
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          overwrite: true
