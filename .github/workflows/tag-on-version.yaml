name: Tag on Version Change

on:
  push:
    paths:
      - "Cargo.toml"  # Trigger workflow only when Cargo.toml changes

jobs:
  tag-version:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code with full history
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to allow tagging

      # Step 2: Set up Git user
      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Extract version from Cargo.toml and create a tag
      - name: Extract version and create tag
        id: tag_version
        run: |
          # Extract version from Cargo.toml
          VERSION=$(grep '^version' Cargo.toml | sed -E 's/version = "(.*)"/\1/')
          echo "Extracted version: $VERSION"

          # Check if the version was extracted correctly
          if [ -z "$VERSION" ]; then
            echo "Error: Version could not be extracted from Cargo.toml."
            exit 1
          fi

          # Check if the tag already exists remotely
          if git ls-remote --tags origin | grep -q "refs/tags/v$VERSION"; then
            echo "Tag v$VERSION already exists on remote. Skipping tag creation."
            exit 0
          fi

          # Create the tag on the latest commit
          git tag "v$VERSION" -m "Release version $VERSION"
          echo "Tag v$VERSION created and checked out."

      # Step 4: Push the tag to GitHub
      - name: Push tag to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Verify the tag exists locally before pushing
          TAG_NAME="v$VERSION"
          if git show-ref --tags | grep -q "refs/tags/$TAG_NAME"; then
            echo "Tag $TAG_NAME exists locally. Proceeding with push."
            git push origin "$TAG_NAME"
          else
            echo "Error: Tag $TAG_NAME does not exist locally."
            exit 1
          fi

